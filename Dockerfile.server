FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app

# Copy requirements first to leverage Docker cache
COPY requirements.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copy the web app
COPY src/ src/

# Copy the data
COPY data/ data/

# Change ownership to app user
RUN chown -R app:app /app

# Switch to non-root user
USER app

# Expose the port the app runs on
EXPOSE ${PORT}

# Configure logging and Python behavior
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Production configuration
ENV WORKERS=${WORKERS:-4}
ENV WORKER_CLASS=${WORKER_CLASS:-uvicorn.workers.UvicornWorker}
ENV WORKER_CONNECTIONS=${WORKER_CONNECTIONS:-1000}
ENV MAX_REQUESTS=${MAX_REQUESTS:-1000}
ENV MAX_REQUESTS_JITTER=${MAX_REQUESTS_JITTER:-100}
ENV TIMEOUT=${TIMEOUT:-30}
ENV KEEPALIVE=${KEEPALIVE:-2}

# Command to run the application with Gunicorn and uvicorn workers
CMD ["sh", "-c", "gunicorn src.main:app --bind 0.0.0.0:${PORT} --workers ${WORKERS} --worker-class ${WORKER_CLASS} --worker-connections ${WORKER_CONNECTIONS} --max-requests ${MAX_REQUESTS} --max-requests-jitter ${MAX_REQUESTS_JITTER} --timeout ${TIMEOUT} --keep-alive ${KEEPALIVE} --access-logfile - --error-logfile - --log-level info"]
